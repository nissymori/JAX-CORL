awac:
  # Refererd to original paper:https://arxiv.org/pdf/2006.09359
  env_name: walker2d-medium-expert-v2
  # Dataset
  batch_size: 256
  normalize_state: false
  # Network 
  actor_hidden_dims: [256, 256, 256, 256]
  critic_hidden_dims: [256, 256]
  actor_lr: 3e-4
  critic_lr: 3e-4
  tau: 0.005
  # AWAC specific
  discount: 0.99
  _lambda: 1.0

cql:
  # Refererd to the implementation: https://github.com/young-geng/JaxCQL/blob/master/JaxCQL/conservative_sac.py
  env_name: walker2d-medium-expert-v2
  # Dataset
  batch_size: 64
  # Network
  hidden_dims: [256, 256]
  orthogonal_init: false
  policy_log_std_multiplier: 1.0
  policy_log_std_offset: -1.0
  # CQL specific
  discount: 0.99
  alpha_multiplier: 1.0
  use_automatic_entropy_tuning: true
  backup_entropy: false
  target_entropy: 0.0
  policy_lr: 3e-4
  qf_lr: 3e-4
  optimizer_type: adam
  soft_target_update_rate: 5e-3
  use_cql: true
  cql_n_actions: 10
  cql_importance_sample: true
  cql_lagrange: false
  cql_target_action_gap: 1.0
  cql_temp: 1.0
  cql_min_q_weight: 5.0
  cql_max_target_backup: false
  cql_clip_diff_min: -np.inf
  cql_clip_diff_max: np.inf

dt:
  # Refererd to the implementation: https://github.com/nikhilbarhate99/min-decision-transformer/blob/master/min_decision_transformer.ipynb
  env_name: walker2d-medium-expert-v2
  # Dataset
  batch_size: 256
  # Network
  context_len: 20
  n_blocks: 3
  embed_dim: 128
  n_heads: 1
  dropout_p: 0.1
  lr: 0.0008
  wt_decay: 1e-4
  beta: [0.9, 0.999]
  clip_grads: 0.25
  warmup_steps: 10000
  # DT specific
  rtg_scale: 1000
  rtg_target: 6000

iql:
  # Refererd to the original implementation: https://github.com/ikostrikov/implicit_q_learning/blob/master/configs/mujoco_config.py
  env_name: walker2d-medium-expert-v2
  # Dataset
  normalize_state: false
  batch_size: 256
  # Network
  hidden_dims: [256, 256]
  actor_lr: 3e-4
  value_lr: 3e-4
  critic_lr: 3e-4
  tau: 0.005
  # IQL specific
  expectile: 0.7
  beta: 3.0
  discount: 0.99

rebrac:
  # Refererd to the original implementation: https://github.com/tinkoff-ai/ReBRAC/blob/public-release/configs/rebrac/walker2d/walker2d_medium_expert.yaml
  env_name: walker2d-medium-expert-v2
  # Dataset
  normalize_state: false
  batch_size: 256
  # Network
  actor_learning_rate: 1e-3
  critic_learning_rate: 1e-3
  hidden_dim: 256
  actor_n_hiddens: 3
  critic_n_hiddens: 3
  tau: 5e-3
  # ReBRAC specific
  gamma: 0.99
  actor_bc_coef: 0.01
  critic_bc_coef: 0.01
  actor_ln: false
  critic_ln: true
  policy_noise: 0.2
  noise_clip: 0.5
  policy_freq: 2
  normalize_q: true

sacn:
  env_name: walker2d-medium-expert-v2
  # Dataset
  normalize_state: false
  batch_size: 256
  # Network
  hidden_dim: 256
  num_critics: 10
  gamma: 0.99
  tau: 5e-3
  actor_learning_rate: 3e-4
  critic_learning_rate: 3e-4
  alpha_learning_rate: 3e-4

td3bc:
  # Refererd to the original paper: https://arxiv.org/abs/2106.06860
  env_name: walker2d-medium-expert-v2
  # Dataset
  normalize_state: false
  batch_size: 256
  # Network
  hidden_dims: [256, 256]
  critic_lr: 1e-3
  actor_lr: 1e-3
  tau: 0.005  # target network update rate
  use_layer_norm: true
  # TD3-BC SPECIFIC
  policy_freq: 2  # update actor every policy_freq updates
  alpha: 2.5  # BC loss weight
  policy_noise_std: 0.2  # std of policy noise
  policy_noise_clip: 0.5  # clip policy noise
  discount: 0.99  # discount factor

xql:
  # Refererd to the original implementation: https://github.com/Div99/XQL/blob/main/offline/reproduce/mujoco/walker2d_expert.sh
  env_name: walker2d-medium-expert-v2
  # Dataset
  normalize_state: false
  batch_size: 256
  # Network
  hidden_dims: [256, 256]
  actor_lr: 3e-4
  value_lr: 3e-4
  critic_lr: 3e-4
  tau: 0.005
  layer_norm: true  # layer norm
  # XQL specific
  vanilla: bool = False  # Of course, we do not use expectile loss
  sample_random_times: 1  # sample random times
  grad_pen: false  # gradient penalty
  lambda_gp: 1  # grad penalty coefficient
  loss_temp: 2.0  # loss temperature
  log_loss: true  # log loss
  num_v_updates: 1  # number of value updates
  max_clip: 5.0  # Loss clip value
  noise: false  # noise
  noise_std: 0.1  # noise std
  discount: 0.99
